name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker
        run: |
         docker version
         docker pull mcr.microsoft.com/azure-storage/azurite --platform=linux/amd64
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Verify Git installation
        run: git --version
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
   #   - name: Cache SonarCloud scanner
    #    id: cache-sonar-scanner
    #    uses: actions/cache@v3
    #    with:
    #      path: .\.sonar\scanner
    #      key: ${{ runner.os }}-sonar-scanner
    #      restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        #if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir .\.sonar
          dotnet tool install --global dotnet-sonarscanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"oveldman_MadWorldSuite" /o:"oveldman" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=TestResults/*/coverage.opencover.xml /d:sonar.coverage.exclusions="**Test*.cs" /d:sonar.exclusions="**/MadWorld.Frontend.UI.Suite/wwwroot/lib/ **, **/MadWorld.Frontend.UI.Admin/wwwroot/lib/ **, **/MadWorld.Frontend.UI.Suite/wwwroot/css/bootstrap **, **/MadWorld.Frontend.UI.Admin/wwwroot/css/bootstrap **, **/MadWorld.Frontend.UI.Suite/wwwroot/css/open-iconic **, **/MadWorld.Frontend.UI.Admin/wwwroot/css/open-iconic **"
          dotnet restore ./MadWorld/MadWorld.sln; 
          dotnet build ./MadWorld/MadWorld.sln;
          dotnet test ./MadWorld/MadWorld.sln --no-build --no-restore --collect:"XPlat Code Coverage" --results-directory TestResults/ -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover;
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"